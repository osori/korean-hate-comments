{"ast":null,"code":"var _jsxFileName = \"/home/ilkyu/akpl/src/components/HateCommentsContainer.tsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { IonItem, IonLabel, IonItemDivider, IonText, IonSearchbar } from '@ionic/react';\n\nconst HateCommentsContainer = ({}) => {\n  const [text, setText] = useState();\n  const [busy, setBusy] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [keyword, setKeyword] = useState(\"이효리\");\n  const exResponse = [{\n    \"article_url\": \"https://ilbe.com/view/1234567\",\n    \"text\": \"죽어라!!\",\n    \"hate_prob\": 0.99999,\n    \"commenter\": \"악플러1\",\n    \"datetime\": \"2015.09.21 12:31\"\n  }];\n  const API_URL = 'http://akpl.ilkyu.kr:8080/find/';\n\n  const getBgColor = prob => {\n    prob *= 100;\n\n    if (prob < 50) {\n      return \"secondary\";\n    } else if (prob < 60) {\n      return \"success\";\n    } else if (prob < 70) {\n      return \"warning\";\n    } else {\n      return \"danger\";\n    }\n  };\n\n  const updateComments = keyword => {\n    setBusy(true);\n    setKeyword(keyword);\n    axios.get(API_URL + keyword).then(resp => resp.data).then(data => {\n      setComments(data);\n    });\n    setBusy(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonItemDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"\\uC544\\uB798\\uC5D0 \\uAC80\\uC0C9\\uD560 \\uD0A4\\uC6CC\\uB4DC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"), /*#__PURE__*/React.createElement(IonSearchbar, {\n    value: keyword,\n    onIonChange: e => updateComments(e.detail.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), \"Hello, \", keyword, comments.map((comment, i) => /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonText, {\n    color: getBgColor(exResponse[0].hate_prob),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, exResponse[0].text)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC131\\uC790: \", exResponse[0].commenter, \" | \", exResponse[0].datetime), /*#__PURE__*/React.createElement(IonText, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    href: exResponse[0].article_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }\n  }, exResponse[0].article_url)))), /*#__PURE__*/React.createElement(IonText, {\n    slot: \"start\",\n    color: getBgColor(exResponse[0].hate_prob),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 83\n    }\n  }, Math.floor(exResponse[0].hate_prob * 100), \"%\")))));\n};\n\nexport default HateCommentsContainer;","map":{"version":3,"sources":["/home/ilkyu/akpl/src/components/HateCommentsContainer.tsx"],"names":["React","useState","axios","IonItem","IonLabel","IonItemDivider","IonText","IonSearchbar","HateCommentsContainer","text","setText","busy","setBusy","comments","setComments","keyword","setKeyword","exResponse","API_URL","getBgColor","prob","updateComments","get","then","resp","data","e","detail","value","map","comment","i","hate_prob","commenter","datetime","article_url","Math","floor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport { IonGrid, IonCol, IonRow, IonCard, IonList, IonCardTitle, IonTextarea, IonItem, IonLabel, IonButton, IonCardHeader, IonCardSubtitle, IonContent, IonListHeader, IonItemDivider, IonText, IonNote, IonSearchbar } from '@ionic/react';\n\ninterface ContainerProps {\n\n}\n\ninterface Comment {\n    article_url: string;\n    text: string;\n    hate_prob: number;\n    commenter: string;\n    datetime: string;\n}\n\n\nconst HateCommentsContainer: React.FC<ContainerProps> = ({  }) => {\n\n  const [text, setText] = useState<string>();\n  const [busy, setBusy] = useState<boolean>(false);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [keyword, setKeyword] = useState<string>(\"이효리\");\n\n  const exResponse = [\n      {\n          \"article_url\": \"https://ilbe.com/view/1234567\",\n          \"text\": \"죽어라!!\",\n          \"hate_prob\": 0.99999,\n          \"commenter\": \"악플러1\",\n          \"datetime\":\"2015.09.21 12:31\"\n    }\n  ]\n\n  const API_URL = 'http://akpl.ilkyu.kr:8080/find/';\n\n  const getBgColor = (prob:number) => {\n    prob *= 100\n    if (prob < 50){\n        return \"secondary\"\n    } else if (prob < 60){\n        return \"success\"\n    } else if (prob < 70){\n        return \"warning\"\n    } else {\n        return \"danger\"\n    }\n  }\n\n  const updateComments = (keyword:string) => {\n    setBusy(true);\n    setKeyword(keyword);\n    axios.get(API_URL + keyword).then(resp => resp.data)\n        .then((data) => {\n            setComments(data)\n        })\n        setBusy(false)\n\n  }\n\n  return (\n    <div>\n        <IonItemDivider>아래에 검색할 키워드를 입력하세요</IonItemDivider>\n        <IonSearchbar value={keyword} onIonChange={e => updateComments(e.detail.value!)}></IonSearchbar>\n        Hello, {keyword}\n\n        {comments.map((comment, i) => (\n            <IonItem>\n                <IonLabel className=\"ion-text-wrap\">\n                    <IonText color={getBgColor(exResponse[0].hate_prob)}>\n                    <h1>{exResponse[0].text}</h1>\n                    </IonText>\n                    <p>작성자: {exResponse[0].commenter} | {exResponse[0].datetime}</p>\n                    <IonText color=\"secondary\">\n                    <p><a target=\"_blank\" href={exResponse[0].article_url}>{exResponse[0].article_url}</a></p>\n                    </IonText>\n                </IonLabel>\n                <IonText slot=\"start\" color={getBgColor(exResponse[0].hate_prob)}><h1>{Math.floor(exResponse[0].hate_prob*100)}%</h1></IonText>\n            </IonItem>\n        ))}\n    </div>\n  );\n};\n\nexport default HateCommentsContainer;\n"]},"metadata":{},"sourceType":"module"}