{"ast":null,"code":"var _jsxFileName = \"/home/ilkyu/akpl/src/components/HatePredictContainer.tsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { IonCard, IonList, IonCardTitle, IonTextarea, IonItem, IonLabel, IonButton, IonCardSubtitle } from '@ionic/react';\n\nconst HatePredictContainer = ({\n  name\n}) => {\n  const [text, setText] = useState();\n  const [history, setHistory] = useState([]);\n  const [busy, setBusy] = useState(false);\n  const API_URL = 'http://akpl.ilkyu.kr:8080/predict/';\n\n  const getBgColor = prob => {\n    if (prob < 0.5) {\n      return \"primary\";\n    } else if (prob < 0.6) {\n      return \"success\";\n    } else if (prob < 0.7) {\n      return \"warning\";\n    } else {\n      return \"danger\";\n    }\n  };\n\n  const predictComment = () => {\n    if (text === undefined) {\n      return;\n    }\n\n    setBusy(true);\n    axios.get(API_URL + text).then(resp => resp.data).then(data => {\n      let prob = data.prob;\n      let comment = {\n        id: history.length,\n        text: text,\n        prob: prob\n      };\n      setHistory([comment, ...history]);\n      setText(\"\");\n      console.log(history);\n    });\n    setBusy(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, name), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    position: \"floating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"\\uBB38\\uC7A5\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"), /*#__PURE__*/React.createElement(IonTextarea, {\n    value: text,\n    placeholder: \"\\uC2F9\\uC4F0\\uB9AC \\uB108\\uBB34 \\uC88B\\uC544\\uC694~~\",\n    onIonChange: e => setText(e.detail.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IonButton, {\n    onClick: predictComment,\n    disabled: busy,\n    expand: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"\\uD610\\uC624 \\uAC80\\uC0AC\"), /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, history.map((comment, i) => /*#__PURE__*/React.createElement(IonCard, {\n    key: i,\n    color: getBgColor(comment.prob),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, comment.text), /*#__PURE__*/React.createElement(IonCardSubtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, comment.prob)))));\n};\n\nexport default HatePredictContainer;","map":{"version":3,"sources":["/home/ilkyu/akpl/src/components/HatePredictContainer.tsx"],"names":["React","useState","axios","IonCard","IonList","IonCardTitle","IonTextarea","IonItem","IonLabel","IonButton","IonCardSubtitle","HatePredictContainer","name","text","setText","history","setHistory","busy","setBusy","API_URL","getBgColor","prob","predictComment","undefined","get","then","resp","data","comment","id","length","console","log","e","detail","value","map","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport { IonCard, IonList, IonCardTitle, IonTextarea, IonItem, IonLabel, IonButton, IonCardHeader, IonCardSubtitle, IonContent } from '@ionic/react';\n\ninterface ContainerProps {\n  name: string;\n}\n\ninterface Comment {\n    id: number;\n    text?: string;\n    prob: number;\n}\n\n\nconst HatePredictContainer: React.FC<ContainerProps> = ({ name }) => {\n  const [text, setText] = useState<string>();\n  const [history, setHistory] = useState<Comment[]>([]);\n  const [busy, setBusy] = useState<boolean>(false);\n\n  const API_URL = 'http://akpl.ilkyu.kr:8080/predict/';\n\n  const getBgColor = (prob:number) => {\n    if (prob < 0.5){\n        return \"primary\"\n    } else if (prob < 0.6){\n        return \"success\"\n    } else if (prob < 0.7){\n        return \"warning\"\n    } else {\n        return \"danger\"\n    }\n  }\n\n  const predictComment = () => {\n    if (text === undefined ){\n        return;\n    }\n    setBusy(true)\n    axios.get(API_URL + text).then(resp => resp.data)\n        .then((data) => {\n            let prob = data.prob;\n            let comment = {\n                id: history.length,\n                text: text,\n                prob: prob\n            }    \n            \n            setHistory([comment, ...history])\n            setText(\"\");\n            console.log(history)\n        })\n        setBusy(false)\n\n  }\n\n  return (\n    <div className=\"container\">\n      <strong>{name}</strong>\n      <IonItem>\n        <IonLabel position=\"floating\">문장을 입력하세요</IonLabel>\n        <IonTextarea \n            value={text} \n            placeholder=\"싹쓰리 너무 좋아요~~\"\n            onIonChange={e => setText(e.detail.value!)}\n        ></IonTextarea>\n      </IonItem>\n      <IonButton onClick={predictComment} disabled={busy} expand=\"block\">혐오 검사</IonButton>\n      <IonList>\n          {history.map((comment, i) => (\n            <IonCard key={i} color={getBgColor(comment.prob)} >\n                <IonCardTitle>\n                    {comment.text}\n                </IonCardTitle>\n                <IonCardSubtitle>\n                    {comment.prob}\n                </IonCardSubtitle>\n            </IonCard>\n          ))}\n      </IonList>\n    </div>\n  );\n};\n\nexport default HatePredictContainer;\n"]},"metadata":{},"sourceType":"module"}