{"ast":null,"code":"import _toConsumableArray from\"/home/ilkyu/akpl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/ilkyu/akpl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import axios from'axios';import{IonList,IonTextarea,IonItem,IonLabel,IonButton,IonListHeader,IonItemDivider,IonText}from'@ionic/react';var HatePredictContainer=function HatePredictContainer(_ref){var name=_ref.name;var exampleComment={id:0,text:\"싹쓰리 너무 좋아요~\",prob:5};var exampleComment2={id:1,text:\"솔직히 싹쓰리 안 나왔으면 좋겠다\",prob:63};var exampleComment3={id:2,text:\"싹쓰리 죽어라 노래도 못하는 것들이 어디서 BTS를 이기겠다고\",prob:93};var _useState=useState(),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState([exampleComment,exampleComment2,exampleComment3]),_useState4=_slicedToArray(_useState3,2),history=_useState4[0],setHistory=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),busy=_useState6[0],setBusy=_useState6[1];var API_URL='http://akpl.ilkyu.kr:8080/predict/';var getBgColor=function getBgColor(prob){if(prob<50){return\"secondary\";}else if(prob<60){return\"success\";}else if(prob<70){return\"warning\";}else{return\"danger\";}};var predictComment=function predictComment(){if((text===null||text===void 0?void 0:text.length)==0){return;}setBusy(true);axios.get(API_URL+text).then(function(resp){return resp.data;}).then(function(data){var prob=data.prob;var comment={id:history.length,text:text,prob:Math.floor(prob*100)};setHistory([comment].concat(_toConsumableArray(history)));setText(\"\");console.log(history);});setBusy(false);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(IonItem,null,/*#__PURE__*/React.createElement(IonLabel,{position:\"stacked\"},\"\\uD610\\uC624 \\uD45C\\uD604\\uC744 \\uAC80\\uC0AC\\uD560 \\uBB38\\uC7A5\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"),/*#__PURE__*/React.createElement(IonTextarea,{value:text,placeholder:\"\\uC2F9\\uC4F0\\uB9AC \\uB108\\uBB34 \\uC88B\\uC544\\uC694~~\",onIonChange:function onIonChange(e){return setText(e.detail.value);}})),/*#__PURE__*/React.createElement(IonButton,{onClick:predictComment,disabled:busy,expand:\"block\"},\"\\uD610\\uC624 \\uAC80\\uC0AC\"),/*#__PURE__*/React.createElement(IonItemDivider,null),/*#__PURE__*/React.createElement(IonListHeader,{lines:\"full\"},/*#__PURE__*/React.createElement(IonLabel,null,/*#__PURE__*/React.createElement(\"h1\",null,\"\\uAC80\\uC0AC \\uAE30\\uB85D\"))),/*#__PURE__*/React.createElement(IonList,null,history.map(function(comment,i){return/*#__PURE__*/React.createElement(IonItem,{key:i},/*#__PURE__*/React.createElement(IonLabel,{class:\"sentence\"},comment.text),/*#__PURE__*/React.createElement(IonText,{slot:\"start\",color:getBgColor(comment.prob)},\"\\uC545\\uD50C \\uD655\\uB960: \",comment.prob,\"%\"));})));};export default HatePredictContainer;","map":{"version":3,"sources":["/home/ilkyu/akpl/src/components/HatePredictContainer.tsx"],"names":["React","useState","axios","IonList","IonTextarea","IonItem","IonLabel","IonButton","IonListHeader","IonItemDivider","IonText","HatePredictContainer","name","exampleComment","id","text","prob","exampleComment2","exampleComment3","setText","history","setHistory","busy","setBusy","API_URL","getBgColor","predictComment","length","get","then","resp","data","comment","Math","floor","console","log","e","detail","value","map","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport { IonList, IonTextarea, IonItem, IonLabel, IonButton, IonListHeader, IonItemDivider, IonText } from '@ionic/react';\n\ninterface ContainerProps {\n  name: string;\n}\n\ninterface Comment {\n    id: number;\n    text?: string;\n    prob: number;\n}\n\n\nconst HatePredictContainer: React.FC<ContainerProps> = ({ name }) => {\n  const exampleComment:Comment = {\n      id:0,\n      text: \"싹쓰리 너무 좋아요~\",\n      prob: 5,\n  }\n  const exampleComment2:Comment = {\n    id:1,\n    text: \"솔직히 싹쓰리 안 나왔으면 좋겠다\",\n    prob: 63\n  }\n  const exampleComment3:Comment = {\n    id:2,\n    text: \"싹쓰리 죽어라 노래도 못하는 것들이 어디서 BTS를 이기겠다고\",\n    prob: 93,\n  }\n\n\n  const [text, setText] = useState<string>();\n  const [history, setHistory] = useState<Comment[]>([exampleComment, exampleComment2, exampleComment3]);\n  const [busy, setBusy] = useState<boolean>(false);\n\n  const API_URL = 'http://akpl.ilkyu.kr:8080/predict/';\n\n  const getBgColor = (prob:number) => {\n    if (prob < 50){\n        return \"secondary\"\n    } else if (prob < 60){\n        return \"success\"\n    } else if (prob < 70){\n        return \"warning\"\n    } else {\n        return \"danger\"\n    }\n  }\n\n  const predictComment = () => {\n    if (text?.length == 0 ){\n        return;\n    }\n    setBusy(true)\n    axios.get(API_URL + text).then(resp => resp.data)\n        .then((data) => {\n            let prob = data.prob;\n            let comment = {\n                id: history.length,\n                text: text,\n                prob: Math.floor(prob*100)\n            }    \n            \n            setHistory([comment, ...history])\n            setText(\"\");\n            console.log(history)\n        })\n        setBusy(false)\n\n  }\n\n  return (\n    <div>\n      <IonItem>\n        <IonLabel position=\"stacked\">혐오 표현을 검사할 문장을 입력하세요</IonLabel>\n        <IonTextarea \n            value={text} \n            placeholder=\"싹쓰리 너무 좋아요~~\"\n            onIonChange={e => setText(e.detail.value!)}\n        ></IonTextarea>\n      </IonItem>\n      <IonButton onClick={predictComment} disabled={busy} expand=\"block\">혐오 검사</IonButton>\n\n      <IonItemDivider>\n\n      </IonItemDivider>\n      \n        <IonListHeader lines=\"full\">\n            <IonLabel><h1>검사 기록</h1></IonLabel>\n        </IonListHeader>\n              <IonList>\n          {history.map((comment, i) => (\n            <IonItem key={i}>\n                <IonLabel class=\"sentence\">\n                    {comment.text}\n                </IonLabel>\n                <IonText slot=\"start\" color={getBgColor(comment.prob)}>\n                    악플 확률: {comment.prob}%\n                </IonText>\n            </IonItem>\n          ))}\n      </IonList>\n\n    </div>\n  );\n};\n\nexport default HatePredictContainer;\n"]},"metadata":{},"sourceType":"module"}