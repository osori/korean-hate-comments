{"ast":null,"code":"var _jsxFileName = \"/home/ilkyu/akpl/src/components/HatePredictContainer.tsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { IonCard, IonList, IonCardTitle, IonTextarea, IonItem, IonLabel, IonButton, IonCardSubtitle, IonListHeader, IonItemDivider } from '@ionic/react';\n\nconst HatePredictContainer = ({\n  name\n}) => {\n  const exampleComment = {\n    id: 0,\n    text: \"싹쓰리 너무 좋아요~\",\n    prob: 5\n  };\n  const exampleComment2 = {\n    id: 1,\n    text: \"솔직히 싹쓰리 안 나왔으면 좋겠다\",\n    prob: 63\n  };\n  const exampleComment3 = {\n    id: 2,\n    text: \"싹쓰리 죽어라 노래도 못하는 것들이 어디서 BTS를 이기겠다고\",\n    prob: 93\n  };\n  const [text, setText] = useState();\n  const [history, setHistory] = useState([exampleComment, exampleComment2, exampleComment3]);\n  const [busy, setBusy] = useState(false);\n  const API_URL = 'http://akpl.ilkyu.kr:8080/predict/';\n\n  const getBgColor = prob => {\n    if (prob < 50) {\n      return \"secondary\";\n    } else if (prob < 60) {\n      return \"success\";\n    } else if (prob < 70) {\n      return \"warning\";\n    } else {\n      return \"danger\";\n    }\n  };\n\n  const predictComment = () => {\n    if ((text === null || text === void 0 ? void 0 : text.length) == 0) {\n      return;\n    }\n\n    setBusy(true);\n    axios.get(API_URL + text).then(resp => resp.data).then(data => {\n      let prob = data.prob;\n      let comment = {\n        id: history.length,\n        text: text,\n        prob: Math.floor(prob * 100)\n      };\n      setHistory([comment, ...history]);\n      setText(\"\");\n      console.log(history);\n    });\n    setBusy(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    position: \"stacked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"\\uD610\\uC624 \\uD45C\\uD604\\uC744 \\uAC80\\uC0AC\\uD560 \\uBB38\\uC7A5\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"), /*#__PURE__*/React.createElement(IonTextarea, {\n    value: text,\n    placeholder: \"\\uC2F9\\uC4F0\\uB9AC \\uB108\\uBB34 \\uC88B\\uC544\\uC694~~\",\n    onIonChange: e => setText(e.detail.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IonButton, {\n    onClick: predictComment,\n    disabled: busy,\n    expand: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"\\uD610\\uC624 \\uAC80\\uC0AC\"), /*#__PURE__*/React.createElement(IonItemDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IonListHeader, {\n    lines: \"full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }\n  }, \"\\uAC80\\uC0AC \\uAE30\\uB85D\"))), /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, history.map((comment, i) => /*#__PURE__*/React.createElement(IonCard, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, comment.text), /*#__PURE__*/React.createElement(IonCardSubtitle, {\n    color: getBgColor(comment.prob),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"\\uC545\\uD50C \\uD655\\uB960: \", comment.prob, \"%\")))));\n};\n\nexport default HatePredictContainer;","map":{"version":3,"sources":["/home/ilkyu/akpl/src/components/HatePredictContainer.tsx"],"names":["React","useState","axios","IonCard","IonList","IonCardTitle","IonTextarea","IonItem","IonLabel","IonButton","IonCardSubtitle","IonListHeader","IonItemDivider","HatePredictContainer","name","exampleComment","id","text","prob","exampleComment2","exampleComment3","setText","history","setHistory","busy","setBusy","API_URL","getBgColor","predictComment","length","get","then","resp","data","comment","Math","floor","console","log","e","detail","value","map","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport { IonGrid, IonCol, IonRow, IonCard, IonList, IonCardTitle, IonTextarea, IonItem, IonLabel, IonButton, IonCardHeader, IonCardSubtitle, IonContent, IonListHeader, IonItemDivider } from '@ionic/react';\n\ninterface ContainerProps {\n  name: string;\n}\n\ninterface Comment {\n    id: number;\n    text?: string;\n    prob: number;\n}\n\n\nconst HatePredictContainer: React.FC<ContainerProps> = ({ name }) => {\n  const exampleComment:Comment = {\n      id:0,\n      text: \"싹쓰리 너무 좋아요~\",\n      prob: 5,\n  }\n  const exampleComment2:Comment = {\n    id:1,\n    text: \"솔직히 싹쓰리 안 나왔으면 좋겠다\",\n    prob: 63\n  }\n  const exampleComment3:Comment = {\n    id:2,\n    text: \"싹쓰리 죽어라 노래도 못하는 것들이 어디서 BTS를 이기겠다고\",\n    prob: 93,\n  }\n\n\n  const [text, setText] = useState<string>();\n  const [history, setHistory] = useState<Comment[]>([exampleComment, exampleComment2, exampleComment3]);\n  const [busy, setBusy] = useState<boolean>(false);\n\n  const API_URL = 'http://akpl.ilkyu.kr:8080/predict/';\n\n  const getBgColor = (prob:number) => {\n    if (prob < 50){\n        return \"secondary\"\n    } else if (prob < 60){\n        return \"success\"\n    } else if (prob < 70){\n        return \"warning\"\n    } else {\n        return \"danger\"\n    }\n  }\n\n  const predictComment = () => {\n    if (text?.length == 0 ){\n        return;\n    }\n    setBusy(true)\n    axios.get(API_URL + text).then(resp => resp.data)\n        .then((data) => {\n            let prob = data.prob;\n            let comment = {\n                id: history.length,\n                text: text,\n                prob: Math.floor(prob*100)\n            }    \n            \n            setHistory([comment, ...history])\n            setText(\"\");\n            console.log(history)\n        })\n        setBusy(false)\n\n  }\n\n  return (\n    <div>\n      <IonItem>\n        <IonLabel position=\"stacked\">혐오 표현을 검사할 문장을 입력하세요</IonLabel>\n        <IonTextarea \n            value={text} \n            placeholder=\"싹쓰리 너무 좋아요~~\"\n            onIonChange={e => setText(e.detail.value!)}\n        ></IonTextarea>\n      </IonItem>\n      <IonButton onClick={predictComment} disabled={busy} expand=\"block\">혐오 검사</IonButton>\n\n      <IonItemDivider>\n\n      </IonItemDivider>\n      \n        <IonListHeader lines=\"full\">\n            <IonLabel><h1>검사 기록</h1></IonLabel>\n        </IonListHeader>\n              <IonList>\n          {history.map((comment, i) => (\n            <IonCard key={i}>\n                <IonCardTitle>\n                    {comment.text}\n                </IonCardTitle>\n                <IonCardSubtitle color={getBgColor(comment.prob)}>\n                    악플 확률: {comment.prob}%\n                </IonCardSubtitle>\n            </IonCard>\n          ))}\n      </IonList>\n\n    </div>\n  );\n};\n\nexport default HatePredictContainer;\n"]},"metadata":{},"sourceType":"module"}