{"ast":null,"code":"import _slicedToArray from\"/home/ilkyu/akpl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectDestructuringEmpty from\"/home/ilkyu/akpl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";import React,{useState}from'react';import axios from'axios';import{IonItem,IonLabel,IonItemDivider,IonText,IonSearchbar}from'@ionic/react';var HateCommentsContainer=function HateCommentsContainer(_ref){_objectDestructuringEmpty(_ref);var _useState=useState(),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),busy=_useState4[0],setBusy=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),comments=_useState6[0],setComments=_useState6[1];var _useState7=useState(\"이효리\"),_useState8=_slicedToArray(_useState7,2),keyword=_useState8[0],setKeyword=_useState8[1];var exResponse=[{\"article_url\":\"https://ilbe.com/view/1234567\",\"text\":\"죽어라!!\",\"hate_prob\":0.99999,\"commenter\":\"악플러1\",\"datetime\":\"2015.09.21 12:31\"}];var API_URL='http://akpl.ilkyu.kr:8080/find/';var getBgColor=function getBgColor(prob){prob*=100;if(prob<50){return\"secondary\";}else if(prob<60){return\"success\";}else if(prob<70){return\"warning\";}else{return\"danger\";}};var updateComments=function updateComments(keyword){setBusy(true);setKeyword(keyword);axios.get(API_URL+keyword).then(function(resp){return resp.data;}).then(function(data){setComments(data);});setBusy(false);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(IonItemDivider,null,\"\\uC544\\uB798\\uC5D0 \\uAC80\\uC0C9\\uD560 \\uD0A4\\uC6CC\\uB4DC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"),/*#__PURE__*/React.createElement(IonSearchbar,{value:keyword,onIonChange:function onIonChange(e){return updateComments(e.detail.value);}}),\"Hello, \",keyword,comments.map(function(comment,i){return/*#__PURE__*/React.createElement(IonItem,null,/*#__PURE__*/React.createElement(IonLabel,{className:\"ion-text-wrap\"},/*#__PURE__*/React.createElement(IonText,{color:getBgColor(comment.hate_prob)},/*#__PURE__*/React.createElement(\"h1\",null,comment.text)),/*#__PURE__*/React.createElement(\"p\",null,\"\\uC791\\uC131\\uC790: \",comment.commenter,\" | \",comment.datetime),/*#__PURE__*/React.createElement(IonText,{color:\"secondary\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"a\",{target:\"_blank\",href:comment.article_url},comment.article_url)))),/*#__PURE__*/React.createElement(IonText,{slot:\"start\",color:getBgColor(comment.hate_prob)},/*#__PURE__*/React.createElement(\"h1\",null,Math.floor(comment.hate_prob*100),\"%\")));}));};export default HateCommentsContainer;","map":{"version":3,"sources":["/home/ilkyu/akpl/src/components/HateCommentsContainer.tsx"],"names":["React","useState","axios","IonItem","IonLabel","IonItemDivider","IonText","IonSearchbar","HateCommentsContainer","text","setText","busy","setBusy","comments","setComments","keyword","setKeyword","exResponse","API_URL","getBgColor","prob","updateComments","get","then","resp","data","e","detail","value","map","comment","i","hate_prob","commenter","datetime","article_url","Math","floor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport { IonGrid, IonCol, IonRow, IonCard, IonList, IonCardTitle, IonTextarea, IonItem, IonLabel, IonButton, IonCardHeader, IonCardSubtitle, IonContent, IonListHeader, IonItemDivider, IonText, IonNote, IonSearchbar } from '@ionic/react';\n\ninterface ContainerProps {\n\n}\n\ninterface Comment {\n    article_url: string;\n    text: string;\n    hate_prob: number;\n    commenter: string;\n    datetime: string;\n}\n\n\nconst HateCommentsContainer: React.FC<ContainerProps> = ({  }) => {\n\n  const [text, setText] = useState<string>();\n  const [busy, setBusy] = useState<boolean>(false);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [keyword, setKeyword] = useState<string>(\"이효리\");\n\n  const exResponse = [\n      {\n          \"article_url\": \"https://ilbe.com/view/1234567\",\n          \"text\": \"죽어라!!\",\n          \"hate_prob\": 0.99999,\n          \"commenter\": \"악플러1\",\n          \"datetime\":\"2015.09.21 12:31\"\n    }\n  ]\n\n  const API_URL = 'http://akpl.ilkyu.kr:8080/find/';\n\n  const getBgColor = (prob:number) => {\n    prob *= 100\n    if (prob < 50){\n        return \"secondary\"\n    } else if (prob < 60){\n        return \"success\"\n    } else if (prob < 70){\n        return \"warning\"\n    } else {\n        return \"danger\"\n    }\n  }\n\n  const updateComments = (keyword:string) => {\n    setBusy(true);\n    setKeyword(keyword);\n    axios.get(API_URL + keyword).then(resp => resp.data)\n        .then((data) => {\n            setComments(data)\n        })\n        setBusy(false)\n\n  }\n\n  return (\n    <div>\n        <IonItemDivider>아래에 검색할 키워드를 입력하세요</IonItemDivider>\n        <IonSearchbar value={keyword} onIonChange={e => updateComments(e.detail.value!)}></IonSearchbar>\n        Hello, {keyword}\n\n        {comments.map((comment, i) => (\n            <IonItem>\n                <IonLabel className=\"ion-text-wrap\">\n                    <IonText color={getBgColor(comment.hate_prob)}>\n                    <h1>{comment.text}</h1>\n                    </IonText>\n                    <p>작성자: {comment.commenter} | {comment.datetime}</p>\n                    <IonText color=\"secondary\">\n                    <p><a target=\"_blank\" href={comment.article_url}>{comment.article_url}</a></p>\n                    </IonText>\n                </IonLabel>\n                <IonText slot=\"start\" color={getBgColor(comment.hate_prob)}><h1>{Math.floor(comment.hate_prob*100)}%</h1></IonText>\n            </IonItem>\n        ))}\n    </div>\n  );\n};\n\nexport default HateCommentsContainer;\n"]},"metadata":{},"sourceType":"module"}