{"ast":null,"code":"var _jsxFileName = \"/home/ilkyu/akpl/src/components/HateCommentsContainer.tsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { IonList, IonItem, IonLabel, IonItemDivider, IonText, IonSearchbar, useIonViewWillEnter, IonToggle } from '@ionic/react';\n\nconst HateCommentsContainer = ({}) => {\n  const [text, setText] = useState();\n  const [busy, setBusy] = useState(false);\n  const [showHateOnly, setShowHateOnly] = useState(true);\n  const [comments, setComments] = useState([]);\n  const [keyword, setKeyword] = useState(\"이효리\");\n  useIonViewWillEnter(() => {\n    updateComments(keyword, showHateOnly);\n  });\n  const API_URL = 'http://akpl.ilkyu.kr:8080/find/';\n  const EXPORT_URL = 'http://akpl.ilkyu.kr:8080/export/';\n\n  const getBgColor = prob => {\n    prob *= 100;\n\n    if (prob < 50) {\n      return \"secondary\";\n    } else if (prob < 60) {\n      return \"success\";\n    } else if (prob < 70) {\n      return \"warning\";\n    } else {\n      return \"danger\";\n    }\n  };\n\n  const updateComments = (keyword, _hateOnly) => {\n    let hateOnly = _hateOnly ? \"1\" : \"0\";\n    setBusy(true);\n    axios.get(API_URL + keyword + \"/\" + 100 + \"/\" + hateOnly).then(resp => resp.data).then(data => {\n      setComments(data);\n    });\n    setBusy(false);\n  };\n\n  const showHateOnlyChecked = checked => {\n    setShowHateOnly(checked);\n    updateComments(keyword, checked);\n  };\n\n  const exportComments = () => {\n    let hateOnly = showHateOnly ? \"1\" : \"0\";\n    axios({\n      url: API_URL + keyword + \"/\" + hateOnly,\n      method: 'GET',\n      responseType: 'blob'\n    }).then(resp => {\n      const type = resp.headers['content-type'];\n      const url = window.URL.createObjectURL(new Blob([resp.data], {\n        type: type\n      }));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'akpl_' + keyword + '.xlsx');\n      document.body.appendChild(link);\n      link.click();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonItemDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"\\uC544\\uB798\\uC5D0 \\uAC80\\uC0C9\\uD560 \\uD0A4\\uC6CC\\uB4DC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"), /*#__PURE__*/React.createElement(IonSearchbar, {\n    placeholder: \"\\uC774\\uD6A8\\uB9AC\",\n    onIonChange: e => {\n      updateComments(e.detail.value, showHateOnly);\n      setKeyword(e.detail.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IonItemDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, \"\\uC545\\uD50C\\uB9CC \\uBCF4\\uAE30\", /*#__PURE__*/React.createElement(IonToggle, {\n    checked: showHateOnly,\n    onIonChange: e => {\n      showHateOnlyChecked(e.detail.checked);\n    },\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 40\n    }\n  }))), /*#__PURE__*/React.createElement(IonItemDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    button: true,\n    onClick: () => exportComments(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, \"\\uB0B4\\uBCF4\\uB0B4\\uAE30 (.xlsx)\")), /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, comments.map((comment, i) => /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"ion-text-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonText, {\n    color: getBgColor(comment.prob),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, comment.text)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC131\\uC790: \", comment.commenter, \" | \", comment.datetime), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"\\uC6D0\\uAE00: \", comment.article_title, \" (\", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    href: comment.article_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 53\n    }\n  }, comment.article_url), \")\")), /*#__PURE__*/React.createElement(IonText, {\n    slot: \"start\",\n    color: getBgColor(comment.prob),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 72\n    }\n  }, Math.floor(comment.prob * 100), \"%\"))))));\n};\n\nexport default HateCommentsContainer;","map":{"version":3,"sources":["/home/ilkyu/akpl/src/components/HateCommentsContainer.tsx"],"names":["React","useState","axios","IonList","IonItem","IonLabel","IonItemDivider","IonText","IonSearchbar","useIonViewWillEnter","IonToggle","HateCommentsContainer","text","setText","busy","setBusy","showHateOnly","setShowHateOnly","comments","setComments","keyword","setKeyword","updateComments","API_URL","EXPORT_URL","getBgColor","prob","_hateOnly","hateOnly","get","then","resp","data","showHateOnlyChecked","checked","exportComments","url","method","responseType","type","headers","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","e","detail","value","map","comment","i","commenter","datetime","article_title","article_url","Math","floor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport { IonGrid, IonCol, IonRow, IonCard, IonList, IonCardTitle, IonTextarea, IonItem, IonLabel, IonButton, IonCardHeader, IonCardSubtitle, IonContent, IonListHeader, IonItemDivider, IonText, IonNote, IonSearchbar, useIonViewWillEnter, IonToggle } from '@ionic/react';\n\ninterface ContainerProps {\n\n}\n\ninterface Comment {\n    article_title: string;\n    article_url: string;\n    text: string;\n    prob: number;\n    commenter: string;\n    datetime: string;\n}\n\n\nconst HateCommentsContainer: React.FC<ContainerProps> = ({  }) => {\n\n  const [text, setText] = useState<string>();\n  const [busy, setBusy] = useState<boolean>(false);\n  const [showHateOnly, setShowHateOnly] = useState<boolean>(true);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [keyword, setKeyword] = useState<string>(\"이효리\");\n\n  useIonViewWillEnter(() => {\n    updateComments(keyword, showHateOnly); \n  })\n\n\n  const API_URL = 'http://akpl.ilkyu.kr:8080/find/';\n  const EXPORT_URL = 'http://akpl.ilkyu.kr:8080/export/'\n\n  const getBgColor = (prob:number) => {\n    prob *= 100\n    if (prob < 50){\n        return \"secondary\"\n    } else if (prob < 60){\n        return \"success\"\n    } else if (prob < 70){\n        return \"warning\"\n    } else {\n        return \"danger\"\n    }\n  }\n\n  const updateComments = (keyword:string, _hateOnly:boolean) => {\n    let hateOnly = _hateOnly ? \"1\" : \"0\"\n    setBusy(true);\n    axios.get(API_URL + keyword + \"/\" + 100 + \"/\" + hateOnly).then(resp => resp.data)\n        .then((data) => {\n            setComments(data)\n        })\n        setBusy(false)\n\n  }\n\n  const showHateOnlyChecked = (checked:boolean) => {\n      setShowHateOnly(checked);\n      updateComments(keyword, checked)\n  }\n\n  const exportComments = () => {\n      let hateOnly = showHateOnly ? \"1\" : \"0\"\n    axios({\n        url: API_URL + keyword + \"/\" + hateOnly,\n        method: 'GET',\n        responseType: 'blob',\n    }).then( (resp) => {\n        const type = resp.headers['content-type'];\n        const url = window.URL.createObjectURL(new Blob([resp.data], {type: type}));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'akpl_'+keyword+'.xlsx');\n        document.body.appendChild(link);\n        link.click();\n    })\n  }\n\n\n  return (\n    <div>\n        <IonItemDivider>아래에 검색할 키워드를 입력하세요</IonItemDivider>\n        <IonSearchbar placeholder=\"이효리\" onIonChange={e => {updateComments(e.detail.value!, showHateOnly); setKeyword(e.detail.value!)}}></IonSearchbar>\n        <IonItemDivider><IonItem>악플만 보기<IonToggle checked={showHateOnly} onIonChange={(e => {showHateOnlyChecked(e.detail.checked)})} color=\"danger\" /></IonItem></IonItemDivider>\n        <IonItemDivider><IonItem button onClick={() => exportComments()} >내보내기 (.xlsx)</IonItem></IonItemDivider>\n        <IonList>\n        {comments.map((comment, i) => (\n            <IonItem>\n                <IonLabel className=\"ion-text-wrap\">\n                    <IonText color={getBgColor(comment.prob)}>\n                    <h1>{comment.text}</h1>\n                    </IonText>\n                    <p>작성자: {comment.commenter} | {comment.datetime}</p>\n                    <p>원글: {comment.article_title} (<a target=\"_blank\" href={comment.article_url}>{comment.article_url}</a>)</p>\n\n                </IonLabel>\n                <IonText slot=\"start\" color={getBgColor(comment.prob)}><h1>{Math.floor(comment.prob*100)}%</h1></IonText>\n            </IonItem>\n        ))}\n        </IonList>\n    </div>\n  );\n};\n\nexport default HateCommentsContainer;\n"]},"metadata":{},"sourceType":"module"}