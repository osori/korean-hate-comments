{"ast":null,"code":"var _jsxFileName = \"/home/ilkyu/akpl/src/components/HatePredictContainer.tsx\";\nimport React, { useState } from 'react';\nimport { IonCard, IonCardTitle, IonTextarea, IonItem, IonLabel, IonButton, IonCardSubtitle } from '@ionic/react';\n\nconst HatePredictContainer = ({\n  name\n}) => {\n  const [text, setText] = useState();\n  const [history, setHistory] = useState([]);\n\n  const predictComment = () => {\n    let comment = {\n      id: history.length,\n      text: \"hello\",\n      prob: 0.66\n    };\n    setHistory([...history, comment]);\n    setText(\"\");\n    console.log(history);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, name), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    position: \"floating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(IonTextarea, {\n    value: text,\n    onIonChange: e => setText(e.detail.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IonButton, {\n    onClick: predictComment,\n    expand: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Predict\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"fsfs\", history.map((comment, i) => /*#__PURE__*/React.createElement(IonCard, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, comment.text), /*#__PURE__*/React.createElement(IonCardSubtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, comment.prob)))));\n};\n\nexport default HatePredictContainer;","map":{"version":3,"sources":["/home/ilkyu/akpl/src/components/HatePredictContainer.tsx"],"names":["React","useState","IonCard","IonCardTitle","IonTextarea","IonItem","IonLabel","IonButton","IonCardSubtitle","HatePredictContainer","name","text","setText","history","setHistory","predictComment","comment","id","length","prob","console","log","e","detail","value","map","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,WAAhC,EAA6CC,OAA7C,EAAsDC,QAAtD,EAAgEC,SAAhE,EAA0FC,eAA1F,QAA6H,cAA7H;;AAaA,MAAMC,oBAA8C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACnE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAY,EAAZ,CAAtC;;AAEA,QAAMc,cAAc,GAAG,MAAM;AAC3B,QAAIC,OAAO,GAAG;AACVC,MAAAA,EAAE,EAAEJ,OAAO,CAACK,MADF;AAEVP,MAAAA,IAAI,EAAE,OAFI;AAGVQ,MAAAA,IAAI,EAAE;AAHI,KAAd;AAKAL,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaG,OAAb,CAAD,CAAV;AACAJ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASH,IAAT,CADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,WAAD;AACI,IAAA,KAAK,EAAEC,IADX;AAEI,IAAA,WAAW,EAAEW,CAAC,IAAIV,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,eASE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAET,cAApB;AAAoC,IAAA,MAAM,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEKF,OAAO,CAACY,GAAR,CAAY,CAACT,OAAD,EAAUU,CAAV,kBACX,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,OAAO,CAACL,IADb,CADJ,eAII,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,OAAO,CAACG,IADb,CAJJ,CADD,CAFL,CAVF,CADF;AA0BD,CAzCD;;AA2CA,eAAeV,oBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { IonCard, IonCardTitle, IonTextarea, IonItem, IonLabel, IonButton, IonCardHeader, IonCardSubtitle, IonContent } from '@ionic/react';\n\ninterface ContainerProps {\n  name: string;\n}\n\ninterface Comment {\n    id: number;\n    text?: string;\n    prob: number;\n}\n\n\nconst HatePredictContainer: React.FC<ContainerProps> = ({ name }) => {\n  const [text, setText] = useState<string>();\n  const [history, setHistory] = useState<Comment[]>([]);\n\n  const predictComment = () => {\n    let comment = {\n        id: history.length,\n        text: \"hello\",\n        prob: 0.66\n    }\n    setHistory([...history, comment])\n    setText(\"\");\n    console.log(history)\n  }\n\n  return (\n    <div className=\"container\">\n      <strong>{name}</strong>\n      <IonItem>\n        <IonLabel position=\"floating\">Description</IonLabel>\n        <IonTextarea \n            value={text} \n            onIonChange={e => setText(e.detail.value!)}\n        ></IonTextarea>\n      </IonItem>\n      <IonButton onClick={predictComment} expand=\"block\">Predict</IonButton>\n      <div>\n          fsfs\n          {history.map((comment, i) => (\n            <IonCard key={i}>\n                <IonCardTitle>\n                    {comment.text}\n                </IonCardTitle>\n                <IonCardSubtitle>\n                    {comment.prob}\n                </IonCardSubtitle>\n            </IonCard>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HatePredictContainer;\n"]},"metadata":{},"sourceType":"module"}