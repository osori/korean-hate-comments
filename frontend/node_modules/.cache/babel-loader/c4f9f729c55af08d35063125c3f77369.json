{"ast":null,"code":"var _jsxFileName = \"/home/ilkyu/akpl/src/components/HatePredictContainer.tsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { IonCard, IonList, IonCardTitle, IonTextarea, IonItem, IonLabel, IonButton, IonCardSubtitle } from '@ionic/react';\n\nconst HatePredictContainer = ({\n  name\n}) => {\n  const exampleComment = {\n    id: 0,\n    text: \"싹쓰리 너무 좋아요~\",\n    prob: 0.053938716650009155\n  };\n  const [text, setText] = useState();\n  const [history, setHistory] = useState([exampleComment]);\n  const [busy, setBusy] = useState(false);\n  const API_URL = 'http://akpl.ilkyu.kr:8080/predict/';\n\n  const getBgColor = prob => {\n    if (prob < 0.5) {\n      return \"secondary\";\n    } else if (prob < 0.6) {\n      return \"success\";\n    } else if (prob < 0.7) {\n      return \"warning\";\n    } else {\n      return \"danger\";\n    }\n  };\n\n  const predictComment = () => {\n    if ((text === null || text === void 0 ? void 0 : text.length) == 0) {\n      return;\n    }\n\n    setBusy(true);\n    axios.get(API_URL + text).then(resp => resp.data).then(data => {\n      let prob = data.prob;\n      let comment = {\n        id: history.length,\n        text: text,\n        prob: prob\n      };\n      setHistory([comment, ...history]);\n      setText(\"\");\n      console.log(history);\n    });\n    setBusy(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, name), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    position: \"floating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"\\uBB38\\uC7A5\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"), /*#__PURE__*/React.createElement(IonTextarea, {\n    value: text,\n    placeholder: \"\\uC2F9\\uC4F0\\uB9AC \\uB108\\uBB34 \\uC88B\\uC544\\uC694~~\",\n    onIonChange: e => setText(e.detail.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IonButton, {\n    onClick: predictComment,\n    disabled: busy,\n    expand: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"\\uD610\\uC624 \\uAC80\\uC0AC\"), /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, history.map((comment, i) => /*#__PURE__*/React.createElement(IonCard, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, comment.text), /*#__PURE__*/React.createElement(IonCardSubtitle, {\n    color: getBgColor(comment.prob),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, comment.prob)))));\n};\n\nexport default HatePredictContainer;","map":{"version":3,"sources":["/home/ilkyu/akpl/src/components/HatePredictContainer.tsx"],"names":["React","useState","axios","IonCard","IonList","IonCardTitle","IonTextarea","IonItem","IonLabel","IonButton","IonCardSubtitle","HatePredictContainer","name","exampleComment","id","text","prob","setText","history","setHistory","busy","setBusy","API_URL","getBgColor","predictComment","length","get","then","resp","data","comment","console","log","e","detail","value","map","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport { IonCard, IonList, IonCardTitle, IonTextarea, IonItem, IonLabel, IonButton, IonCardHeader, IonCardSubtitle, IonContent } from '@ionic/react';\n\ninterface ContainerProps {\n  name: string;\n}\n\ninterface Comment {\n    id: number;\n    text?: string;\n    prob: number;\n}\n\n\nconst HatePredictContainer: React.FC<ContainerProps> = ({ name }) => {\n  const exampleComment:Comment = {\n      id:0,\n      text: \"싹쓰리 너무 좋아요~\",\n      prob: 0.053938716650009155,\n  }\n  const [text, setText] = useState<string>();\n  const [history, setHistory] = useState<Comment[]>([exampleComment]);\n  const [busy, setBusy] = useState<boolean>(false);\n\n  const API_URL = 'http://akpl.ilkyu.kr:8080/predict/';\n\n  const getBgColor = (prob:number) => {\n    if (prob < 0.5){\n        return \"secondary\"\n    } else if (prob < 0.6){\n        return \"success\"\n    } else if (prob < 0.7){\n        return \"warning\"\n    } else {\n        return \"danger\"\n    }\n  }\n\n  const predictComment = () => {\n    if (text?.length == 0 ){\n        return;\n    }\n    setBusy(true)\n    axios.get(API_URL + text).then(resp => resp.data)\n        .then((data) => {\n            let prob = data.prob;\n            let comment = {\n                id: history.length,\n                text: text,\n                prob: prob\n            }    \n            \n            setHistory([comment, ...history])\n            setText(\"\");\n            console.log(history)\n        })\n        setBusy(false)\n\n  }\n\n  return (\n    <div className=\"container\">\n      <strong>{name}</strong>\n      <IonItem>\n        <IonLabel position=\"floating\">문장을 입력하세요</IonLabel>\n        <IonTextarea \n            value={text} \n            placeholder=\"싹쓰리 너무 좋아요~~\"\n            onIonChange={e => setText(e.detail.value!)}\n        ></IonTextarea>\n      </IonItem>\n      <IonButton onClick={predictComment} disabled={busy} expand=\"block\">혐오 검사</IonButton>\n      <IonList>\n          {history.map((comment, i) => (\n            <IonCard key={i} >\n                <IonCardTitle>\n                    {comment.text}\n                </IonCardTitle>\n                <IonCardSubtitle color={getBgColor(comment.prob)}>\n                    {comment.prob}\n                </IonCardSubtitle>\n            </IonCard>\n          ))}\n      </IonList>\n    </div>\n  );\n};\n\nexport default HatePredictContainer;\n"]},"metadata":{},"sourceType":"module"}